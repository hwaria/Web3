생활코딩 – JavaScript 객체 지향 프로그래밍: 자바스크립트를 이용해서 웹브라우저 & Node.js를 제어하기

0.	수업소개
-	객체: 서로 연관된 변수와 함수를 그룹핑해서 이름을 붙인 것 
-	코드를 단순하게 만드는 도구, 자바스크립트의 객체의 특성을 깊게 살펴봄
	prototype
	__proto__
	생성자 함수와 new
	class
	상속

1.	실습준비
-	실습 파일을 저장할 디렉토리 지정, 자바스크립트파일 html파일에 연결

2.	배열과 객체
2-1. 객체의 기본
-	Object.js파일에 객체를 만들어볼 것임
-	객체와 배열의 차이를 알기 위해 둘 다 만들어보자
Var memberArray = [‘egoing’, ‘graphittie’, ‘leezhce’];
Console.log(“memberArray[1]”, memberArray[1]) -> memberArray[1] graphittie 

Var memberObject = {
	Manager: ‘egoing’,
	Developer: ‘graphittie’,
	Designer: ‘leezhce’
}
Console.log(‘memberObject.designer’, memberObject.designer); -> memberObject.desginer leezhce

: 배열에서는 값에 접근할 때 대괄호를, 객체에서는 점을 사용
객체에서도 대괄호로 값 접근하려면 memberObject[‘designer’]
: 값을 만들고 읽기를 해봤음.
-	값을 수정하고 삭제하려면?
memberObject.designer = ‘leezche’ 값 수정
delete memberObject.manager -> 값 삭제
-	요약: 객체는 이름이 있는 정보를 정리하는 도구, 객체를 읽을때는 점이나 대괄호를 사용, 수정이나 삭제방법

2-2. 객체와 반복문
-	반복문을 이용해서 객체의 모든 값에 접근하는 방법 
-	객체와 배열의 반복문 실행결과를 비교하여 보기 쉽도록 console.group(‘array loop’); console.group(‘object loop’) 코드 안에 비교문 쓰기 
var memberArray = ['egoing', 'graphittie', 'leezhce'];
console.group('array loop');
var i = 0;
while ( i < memberArray.length) {
	console.log(i, memberArray[i]);
	i += 1;
} 
console.groupEnd('array loop'); -> 0 “egoing”, 1 “graphittie”, 2 “leezhce”

var memberObject = {
	manager: 'egoing',
	developer: 'graphittie',
	designer: 'leezhce'
}	

console.group('object loop');
for (var i in memberObject) {
	console.log(i);
}
console.groupEnd('object loop');  -> manager, developer, designer 키의 값이 나옴
: 원소의 값을 가져올 때는 memberObject[i] -> ‘egoing’, ‘graphittie”, ‘leezhce”
